root@0a446b5da76f:/#
root@0a446b5da76f:/# cd root
root@0a446b5da76f:~# ls
0x01_emacs  Alx                            hazelkimani95  school
0x02_emacs  alx-low_level_programming      new_school     school_is_amazing
0x02_vi     alx-system_engineering-devops  opening        so_cool
0x03_vi     alx-zero_day                   Personal       zero_day
root@0a446b5da76f:~# cd alx-low_level_programming
root@0a446b5da76f:~/alx-low_level_programming# ls
0x00-hello_world              0x02-functions_nested_loops  README.md
0x01-variables_if_else_while  0x03-debugging
root@0a446b5da76f:~/alx-low_level_programming# cd 0x02-functions_nested_loops
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# ls
0-putchar.c        1-alphabet.c            4-main.c      7-print_last_digit.c
100-times_table.c  1-main.c                5-main.c      8-24
101-natural.c      2-alphabet_x10          5-sign        8-24_hours.c
102-fibonacci.c    2-main.c                5-sign.c      8-main.c
103-fibonacci.c    2-print_alphabet_x10.c  6-abs         9-times_table.c
104-fibonacci.c    3-islower               6-abs.c       main.h
10-add.c           3-islower.c             6-main.c      _putchar.c
11-print_to_98.c   3-main.c                7-last_digit  README.md
1-alphabet         4-isalpha.c             7-main.c
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more 0-putchar.c
#include "main.h"
/**
* main - print _putchar
* is written by mbah
* Return: 0
*/
int main(void)
{
_putchar('_');
_putchar('p');
_putchar('u');
_putchar('t');
_putchar('c');
_putchar('h');
_putchar('a');
_putchar('r');
_putchar('\n');
return (0);
}
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# betty 0-putchar.c
========== 0-putchar.c ==========
main
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more main.h
#ifndef main_h
#define main_h
int _putchar(char);
void print_alphabet(void);
void print_alphabet_x10(void);
int _islower(int c);
int _isalpha(int c);
int print_sign(int n);
int _abs(int);
int print_last_digit(int);
void jack_bauer(void);
void times_table(void);
int add(int, int);
void print_to_98(int n);
void print_times_table(int n);
#endif
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops#
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more  1-alphabet.c
#include "main.h"
/**
* print_alphabet - print all alphabet in lowercase
*/
void print_alphabet(void)
{
char letter;
for (letter = 'a'; letter <= 'z'; letter++)
_putchar(letter);
_putchar('\n');
}
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# ls
0-putchar.c        1-alphabet.c            4-main.c      7-print_last_digit.c
100-times_table.c  1-main.c                5-main.c      8-24
101-natural.c      2-alphabet_x10          5-sign        8-24_hours.c
102-fibonacci.c    2-main.c                5-sign.c      8-main.c
103-fibonacci.c    2-print_alphabet_x10.c  6-abs         9-times_table.c
104-fibonacci.c    3-islower               6-abs.c       main.h
10-add.c           3-islower.c             6-main.c      _putchar.c
11-print_to_98.c   3-main.c                7-last_digit  README.md
1-alphabet         4-isalpha.c             7-main.c
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# betty  1-alphabet.c

========== 1-alphabet.c ==========
print_alphabet
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more 2-alphabet_x10

******** 2-alphabet_x10: Not a text file ********

root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more 2-print_alphabet_x10.c
#include "main.h"

/**
 * print_alphabet_x10 - Prints 10 times the alphabet, in lowercase.
 */
void print_alphabet_x10(void)
{
        int count = 0;
        char letter;

        while (count++ <= 9)
        {
                for (letter = 'a'; letter <= 'z'; letter++)
                        _putchar(letter);
                _putchar('\n');
        }
}
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# betty 2-print_alphabet_x10.c

========== 2-print_alphabet_x10.c ==========
print_alphabet_x10
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more 3-islower.c
#include "main.h"
/**
* _islower - check if char is lowercase
* @c: is the char to be checked
* Return: 1 if char is lowercase, otherwise 0.
*/
int _islower(int c)
{
if (c >= 'a' && c <= 'z')
return (1);
else
return (0);
}

root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# betty 3-islower.c

========== 3-islower.c ==========
_islower
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more 4-isalpha.c
#include "main.h"
/**
* _isalpha - checks for alphabetic character
* @c: the character to be checked
* Return: 1 if c is a letter, 0 otherwise
*/
int _isalpha(int c)
{
return ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'));
}

root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# betty 4-isalpha.c

========== 4-isalpha.c ==========
_isalpha
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops#
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# ls
0-putchar.c        104-fibonacci.c   1-main.c                3-islower.c  5-sign    7-last_digit          8-main.c
100-times_table.c  10-add.c          2-alphabet_x10          3-main.c     5-sign.c  7-main.c              9-times_table.c
101-natural.c      11-print_to_98.c  2-main.c                4-isalpha.c  6-abs     7-print_last_digit.c  main.h
102-fibonacci.c    1-alphabet        2-print_alphabet_x10.c  4-main.c     6-abs.c   8-24                  _putchar.c
103-fibonacci.c    1-alphabet.c      3-islower               5-main.c     6-main.c  8-24_hours.c          README.md
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more 5-sign.c
#include "main.h"

/**
 * print_sign - Prints the sign of a number.
 * @n: The number of which the sign will be printed.
 *
 * Return: 1 if the number is greater than zero,
 *         0 if the number is zero,
 *         -1 if the number is less than zero.
 */
int print_sign(int n)
{
        if (n > 0)
        {
                _putchar('+');
                return (1);
        }
        else if (n == 0)
        {
                _putchar('0');
                return (0);
        }
        else
        {
                _putchar('-');
                return (-1);
        }
}
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# betty 5-sign.c

========== 5-sign.c ==========
print_sign
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# more 7-print_last_digit.c
#include "main.h"
/**
* print_last_digit - prints the last digit of a number
* @n: the int to extract the last digit from
* Return: value of the last digit
*/
int print_last_digit(int n)
{
int a;
if (n < 0)
n = -n;
a = n % 10;
if (a < 0)
a = -a;
_putchar(a + '0');
return (a);
}

root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops# betty 7-print_last_digit.c

========== 7-print_last_digit.c ==========
print_last_digit
root@0a446b5da76f:~/alx-low_level_programming/0x02-functions_nested_loops#
